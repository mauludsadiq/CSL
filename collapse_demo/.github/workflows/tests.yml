name: CI: matrix tests + scenarios

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read

jobs:
  tests-linux:
    name: tests (Linux ${{ matrix.python-version }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [ "3.10", "3.11", "3.12" ]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests
        run: |
          pytest -q

  tests-macos-313:
    name: tests (macOS 3.13)
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python 3.13
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"
          cache: pip

      - name: Install deps (macOS has 3.13 wheels)
        run: |
          python -m pip install --upgrade pip
          # Your requirements.txt already pins:
          # pandas==2.2.2, numpy==1.26.4, pytest==8.2.0, tabulate==0.9.0, rich==13.7.1
          pip install -r requirements.txt

      - name: Run tests
        run: |
          pytest -q

  run-scenarios:
    name: Run Scenarios + Artifacts (Ubuntu 3.12)
    runs-on: ubuntu-latest
    needs: [tests-linux, tests-macos-313]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: pip

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          # pretty tables in CI output (optional)
          pip install rich

      - name: Run all scenarios (CSV + JSON + verify)
        run: |
          make run-all
          python tools/validate_artifacts.py

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: collapse_artifacts
          path: artifacts/
          if-no-files-found: error
