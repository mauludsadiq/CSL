name: Run Tests + Scenarios + Artifacts

on:
  push:
  pull_request:

jobs:
  test-matrix:
    name: CI (3.10â€“3.12)
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11", "3.12"]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install deps (wheel-only)
        run: |
          python -m pip install --upgrade pip
          pip install --only-binary=:all: -r requirements.txt
          pip install --only-binary=:all: pytest

      - name: Run unit tests
        run: pytest -q

      - name: Run scenarios + write artifacts
        run: |
          python demo_runner.py --run-all --json --verify

      - name: Validate artifact JSONs
        run: python tools/validate_artifacts.py

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: collapse-artifacts-py${{ matrix.python-version }}
          path: artifacts/

  # Optional: Canary for Python 3.13 (doesn't fail the whole workflow)
  py313-canary:
    name: Canary (3.13, allowed to fail)
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.13"
      - name: Try wheel-only install
        run: |
          python -m pip install --upgrade pip
          pip install --only-binary=:all: -r requirements.txt || true
          pip install --only-binary=:all: pytest || true
      - name: Try running (may no-op if deps missing)
        run: |
          if python -c "import pandas, numpy" 2>/dev/null; then
            pytest -q || true
            python demo_runner.py --run-all --json --verify || true
            python tools/validate_artifacts.py || true
          else
            echo "Skipping runs on 3.13; wheels not available yet."
          fi
